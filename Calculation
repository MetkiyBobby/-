"""
Расчетные методы прогнозирования неблагоприятных явлений погоды
"""

# Функция для рассчёта возможности возникновения гололеда

def ice_forecast():
    while True:
        print("ПРОГНОЗ ГОЛОЛЕДА ПО МЕТОДУ ЯГУДИНА")
        print("Введите 'расчет', чтобы начать расчет, или 'назад', для возврата в предыдущее меню")
        option = (input()).lower()
        if option == "назад":
            break
        elif option == "расчет":
            try:
                print("Введите приземную температуру: ")
                T = float(input())
                print("Введите температуру на поверхности 850 гПа: ")
                T850 = float(input())
                print("Введите высоту изотермы -10 градусов: ")
                H_10 = float(input())
            except ValueError:
                print("ОШИБКА! Необходимо вводить число")
                continue
                        
            if T <= 1 and T >= -8 and T850 >= -8:  # Проверяются условия возникновения гололеда
                print("Ожидается гололед")
                if H_10 <= 4.3 and H_10 >= 2.2 and T <= 0 and T >= -3.5: # Проверяются условия для возникновения умеренного гололеда.
                    print("Интесивность: умеренный")
                else: # Если нет условий возникновения умеренного гололеда, прогнозируется слабый гололед
                    print("Интенсивность: слабый")
            else:
                print("Гололед не ожидается")
        else:
            continue

# Функция для определения минимальной температуры по формуле Зверева
def freezing_Zverev():
    while True:
        print("ПРОГНОЗ МИНИМАЛЬНОЙ ТЕМПЕРАТУРЫ ПО ФОРМУЛЕ ЗВЕРЕВА")
        print("Введите 'расчет', чтобы начать расчет, или 'назад', для возврата в предыдущее меню")
        option = (input()).lower()
        if option == "назад":
            break
        elif option == "расчет":
            try: 
                print("Выберите срок наблюдения (12 или 18): ")
                t = float(input())
                if t == 12: # t - срок наблюдений (12 или 18 часов по местному времени)
                    b = 6 # Коэффициент зависящий от строка наблюдений
                elif t == 18:
                    b = 4
                else:
                    print("Необходимо выбрать срок 12 или 18 часов!")
                    continue
                print("Введите температуру в срок наблюдения: ")
                T = float(input())
                print("Введите точку росы в срок наблюдения: ")
                Td = float(input())
            except ValueError:
                print("ОШИБКА! Необходимо вводить число")
                continue
       
            Tmin = 0.5 * (T + Td) - b # Формула для расчета минимальной температуры
            print("Ожидаемая минимальная температура: ")
            print(Tmin)
        else:
            continue
        

# Функция для определения минимальной температуры по формуле Михельсона
def freezing_Michelson():
    while True:
        print("ПРОГНОЗ МИНИМАЛЬНОЙ ТЕМПЕРАТУРЫ ПО ФОРМУЛЕ МИХЕЛЬСОНА")
        print("Введите 'расчет', чтобы начать расчет, или 'назад', для возврата в предыдущее меню")
        option = (input()).lower()
        if option == "назад":
            break
        elif option == "расчет":
            try:
                print("Введите точку росы в 21 час по местному времени: ")
                Td = float(input())
            except ValueError:
                print("ОШИБКА! Необходимо вводить число")
                continue
            
            print("Ожидается ясная погода (да / нет)?: ")
            cloudiness = (input()).lower()
            if cloudiness == "да":
                k = 2 # к - коэффициент зависящий от облачности
            elif cloudiness == "нет":
                k = 0
            else:
                print("Необходимо ввести 'да' или 'нет'")
                continue
                      
            Tmin = Td - k # Формула для расчета минимальной температуры
            print("Ожидаемая минимальная температура: ")
            print(Tmin)
        else:
            continue

# Функция для определения вероятности заморозков по графику Броунова.
def freezing_Brounov():
    while True:
        print("ПРОГНОЗ МИНИМАЛЬНОЙ ТЕМПЕРАТУРЫ ПО ФОРМУЛЕ МИХЕЛЬСОНА")
        print("Введите 'расчет', чтобы начать расчет, или 'назад', для возврата в предыдущее меню")
        option = (input()).lower()
        if option == "назад":
            break
        elif option == "расчет":
            try:
                print("Введите температуру в 21 час по местному времени: ")
                T21 = float(input())
                print("Введите разность температуры в 12 и 21 час: ")
                Tdif = float(input())
            except:
                print("ОШИБКА! Необходимо вводить число")
                continue
                
            a = 2.5911 # коэффициент линейного уровнения для графиков
            if T21 <= (Tdif + 4.2587) / a:  # здесь и далее проверяется расположение точки относительно
                                            #линейных графиков зависимости вероятности возникновения заморозков от T21 и Tdif
                probability = "100%" # вероятность возникновения заморозков
            elif T21 <= (Tdif + 6.8239) / a and T21 > (Tdif + 4.2587) / a:
                probability = "80%"
            elif T21 <= (Tdif + 11.79) / a and T21 > (Tdif + 6.8239) / a:
                probability = "60%"
            elif T21 <= (Tdif + 17.62) / a and T21 > (Tdif + 11.79) / a:
                probability = "40%"
            elif T21 <= (Tdif + 21.936) / a and T21 > (Tdif + 17.62) / a:
                probability = "30%"
            elif T21 <= (Tdif + 28.414) / a and T21 > (Tdif + 21.936) / a:
                probability = "10%"
            elif T21 > (Tdif + 28.414) / a:
                probability = "0%"
            print("Вероятнось заморозков:")
            print(probability)

        else:
            continue

# Функция для выбора метода прогнозирования заморозков
def freze_method():
    while True:
        print("Выберите метод прогнозирования 'формула Зверева', 'формула Михельсона', 'график Броунова' или введите 'назад' для возврата в предыдущее меню: ")
        option = (input()).lower() # делаем ввод строчными буквами
        if option == "назад":
            break
        elif option == "формула зверева":
            freezing_Zverev()
        elif option == "формула михельсона":
            freezing_Michelson()
        elif option == "график броунова":
            freezing_Brounov()
        else:
            continue


while True:
    
    print("ПРОГНОЗИРОВАНИЕ НЕБЛАГОПРИЯТНЫХ ЯВЛЕНИЙ")
    print("Выберите явление из предложенных (гололед, заморозки) или введите 'выход': ")
    option = (input()).lower()# делаем ввод строчными буквами
    if option == "выход":
       break
    elif option == "гололед":
        ice_forecast()
    elif option == "заморозки":
        freze_method()



